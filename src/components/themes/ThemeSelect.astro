---

---

<theme-select>
  <select id="theme-select">
    <!-- Themes are dynamically loaded here -->
  </select>
</theme-select>

<script>
  class ThemeSelect extends HTMLElement {
    constructor() {
      super();

      const select = this.querySelector("select");
      select?.addEventListener("change", (event) => {
        this.changeTheme((event.target as HTMLSelectElement).value);
      });

      window.addEventListener("themeListLoaded", this.onThemeListLoaded);
    }

    changeTheme(theme: string) {
      const event = new CustomEvent("themeChange", { detail: theme });
      window.dispatchEvent(event);
    }

    onThemeListLoaded(e: Event) {
      const select: HTMLSelectElement | null =
        document.querySelector("#theme-select");

      if (select === null) return;

      const themes = (e as CustomEvent).detail;

      themes.map((theme: { id: string; name: string; active: boolean }) => {
        const option = document.createElement("option");
        option.value = theme.id;
        option.textContent = theme.name;
        select.appendChild(option);

        if (theme.active) {
          select.value = option.value;
        }
      });
    }
  }

  customElements.define("theme-select", ThemeSelect);
</script>
